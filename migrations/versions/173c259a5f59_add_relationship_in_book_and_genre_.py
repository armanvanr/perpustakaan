"""add relationship in book and genre tables

Revision ID: 173c259a5f59
Revises: 21d26828278d
Create Date: 2023-06-14 21:49:20.877549

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '173c259a5f59'
down_revision = '21d26828278d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_author',
    sa.Column('book_id', sa.String(), nullable=False),
    sa.Column('author_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'author_id')
    )
    op.create_table('book_genre',
    sa.Column('book_id', sa.String(), nullable=False),
    sa.Column('genre_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'genre_id')
    )
    op.drop_table('book__author')
    op.drop_table('book__genre')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book__genre',
    sa.Column('book_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('genre_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name='book__genre_book_id_fkey'),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], name='book__genre_genre_id_fkey'),
    sa.PrimaryKeyConstraint('book_id', 'genre_id', name='book__genre_pkey')
    )
    op.create_table('book__author',
    sa.Column('book_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], name='book__author_author_id_fkey'),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], name='book__author_book_id_fkey'),
    sa.PrimaryKeyConstraint('book_id', 'author_id', name='book__author_pkey')
    )
    op.drop_table('book_genre')
    op.drop_table('book_author')
    # ### end Alembic commands ###
